#!/usr/bin/env bash

set +u

if [[ "${BUILDKITE_LABEL}" == ":service_dog: Linting" ]]; then
  cd web && pnpm install && cd ../
fi

if [[ "${BUILDKITE_LABEL}" == ":docker: Build Image [coverage]" ]]; then
  cp -R /buildkite/.pnpm-store .
fi

if [[ "${BUILDKITE_STEP_KEY}" =~ build-deb-package-(arm64|armhf) && "${BUILDKITE_AGENT_NAME}" =~ sauron* ]]; then
  docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
fi

if [[ "${BUILDKITE_LABEL}" =~ ":debian: Build Package" ]]; then
  buildkite-agent artifact download "authelia-linux-${ARCH}.tar.gz" .
fi

if [[ "${BUILDKITE_LABEL}" =~ ":selenium:" ]]; then
  DEFAULT_ARCH=coverage
  echo "--- :docker: Extract, load and tag build container"
  buildkite-agent artifact download "authelia-image-${DEFAULT_ARCH}*" .
  zstdcat "authelia-image-${DEFAULT_ARCH}.tar.zst" | docker load
  docker tag authelia/authelia authelia:dist

  if [[ "${BUILD_DUO}" == "true" ]] && [[ "${SUITE}" == "DuoPush" ]]; then
    if [[ "${BUILDKITE_BRANCH}" =~ ^renovate/ ]]; then
      sed -i "s/integration-duo/integration-duo:renovate/" internal/suites/example/compose/duo-api/docker-compose.dist.yml
  	elif [[ "${BUILDKITE_BRANCH}" != "master" ]] && [[ ! "${BUILDKITE_BRANCH}" =~ .*:.* ]]; then
      sed -i "s/integration-duo/integration-duo:${BUILDKITE_BRANCH}/" internal/suites/example/compose/duo-api/docker-compose.dist.yml
    elif [[ "${BUILDKITE_BRANCH}" != "master" ]] && [[ "${BUILDKITE_BRANCH}" =~ .*:.* ]]; then
      sed -i "s/integration-duo/integration-duo:PR${BUILDKITE_PULL_REQUEST}/" internal/suites/example/compose/duo-api/docker-compose.dist.yml
    fi
  elif [[ "${BUILD_HAPROXY}" == "true" ]] && [[ "${SUITE}" == "HAProxy" ]]; then
    if [[ "${BUILDKITE_BRANCH}" =~ ^renovate/ ]]; then
      sed -i "s/integration-haproxy/integration-haproxy:renovate/" internal/suites/example/compose/haproxy/docker-compose.yml
  	elif [[ "${BUILDKITE_BRANCH}" != "master" ]] && [[ ! "${BUILDKITE_BRANCH}" =~ .*:.* ]]; then
  	  sed -i "s/integration-haproxy/integration-haproxy:${BUILDKITE_BRANCH}/" internal/suites/example/compose/haproxy/docker-compose.yml
  	elif [[ "${BUILDKITE_BRANCH}" != "master" ]] && [[ "${BUILDKITE_BRANCH}" =~ .*:.* ]]; then
  	  sed -i "s/integration-haproxy/integration-haproxy:PR${BUILDKITE_PULL_REQUEST}/" internal/suites/example/compose/haproxy/docker-compose.yml
  	fi
  fi
fi

if [[ "${BUILDKITE_LABEL}" == ":docker: Build and Deploy" ]]; then
  echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
fi

if [[ "${BUILDKITE_LABEL}" == ":docker: Deploy Manifest" ]]; then
  echo "--- :go: :react: :swagger: Extract pre-built binary"
  buildkite-agent artifact download "authelia-linux-*-musl.tar.gz" .
  for archive in authelia-linux-*-musl.tar.gz; do tar xzf ${archive} --wildcards "authelia-linux-*"; done
fi

if [[ "${BUILDKITE_LABEL}" == ":github: Deploy Artifacts" ]]; then
  buildkite-agent artifact download "authelia-*.tar.gz*" .
  buildkite-agent artifact download "authelia_*.deb*" .
fi

if [[ "${BUILDKITE_LABEL}" == ":debian: :fedora: :ubuntu: Deploy APT" ]]; then
  buildkite-agent artifact download "authelia_*.deb" .
fi
