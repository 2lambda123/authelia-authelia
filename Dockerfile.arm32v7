# =======================================
# ===== Build image for the backend =====
# =======================================
FROM golang:1.16.5-alpine AS builder-backend

WORKDIR /go/src/app

ARG CC_VERSION="v15"
RUN \
echo ">> Downloading required apk's..." && \
apk --no-cache add curl && \
echo ">> Downloading cross-compiler..." && \
curl -Lfs -o /tmp/gcc-9.2.0-arm-linux-musleabihf.tar.xz "https://github.com/just-containers/musl-cross-make/releases/download/${CC_VERSION}/gcc-9.2.0-arm-linux-musleabihf.tar.xz" && \
tar xf /tmp/gcc-9.2.0-arm-linux-musleabihf.tar.xz -C /

COPY go.mod go.sum ./

RUN \
echo ">> Downloading go modules..." && \
go mod download

COPY / ./

ARG LDFLAGS_EXTRA
# CGO_ENABLED=1 and gcc cross-compiler is required for building go-sqlite3
RUN \
mv public_html internal/server/public_html && \
echo ">> Starting go build..." && \
GOOS=linux GOARCH=arm CGO_ENABLED=1 CC=arm-linux-musleabihf-gcc CGO_LDFLAGS=-fuse-ld=bfd go build -tags netgo \
-ldflags "-s -w -linkmode external ${LDFLAGS_EXTRA} -extldflags -static" -trimpath -o authelia ./cmd/authelia

# ===================================
# ===== Authelia official image =====
# ===================================
FROM arm32v7/alpine:3.14.0

WORKDIR /app

COPY ./qemu-arm-static /usr/bin/qemu-arm-static

RUN apk --no-cache add ca-certificates su-exec tzdata && \
    rm /usr/bin/qemu-arm-static

COPY --from=builder-backend /go/src/app/authelia /go/src/app/LICENSE /go/src/app/entrypoint.sh /go/src/app/healthcheck.sh ./

EXPOSE 9091

VOLUME /config

# Set environment variables
ENV PATH="/app:${PATH}" \
    PUID=0 \
    PGID=0

ENTRYPOINT ["/app/entrypoint.sh"]
CMD ["--config", "/config/configuration.yml"]
HEALTHCHECK --interval=30s --timeout=3s --start-period=1m CMD /app/healthcheck.sh
